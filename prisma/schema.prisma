// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  email      String?   @unique
  emailVerified DateTime?
  image String?
  hashedPassword String?
  access_token String?
  token_type String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  posts      Post[]
  comments   Comment[]
  account Account[]
}

model Account{
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String?
  providerAccountId String
  refresh_token String?
  access_token String?
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String    @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  comment   String
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postId    String   @db.ObjectId
  userId    String   @db.ObjectId
}
